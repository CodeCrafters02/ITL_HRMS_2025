# Generated by Django 5.2.4 on 2025-07-23 16:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recruitment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('job_title', models.CharField(max_length=100)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('application_date', models.DateField(blank=True, null=True)),
                ('interview_date', models.DateField(blank=True, null=True)),
                ('appointment_date', models.DateField(blank=True, null=True)),
                ('guardian_name', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('selected', 'Selected'), ('rejected', 'Rejected')], default='waiting', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('is_holiday', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.company')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='BreakConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('break_type', models.CharField(blank=True, max_length=50, null=True)),
                ('duration_minutes', models.PositiveIntegerField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='AssetInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField(default=0)),
                ('icon_image', models.ImageField(blank=True, null=True, upload_to='company/assets/')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='UserRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('master', 'Master'), ('admin', 'Admin'), ('employee', 'Employee')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='app.company')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CompanyPolicies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('document', models.FileField(upload_to='policies/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=100)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation_name', models.CharField(max_length=100)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.department')),
            ],
        ),
        migrations.CreateModel(
            name='EmpLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('reason', models.TextField(blank=True, null=True)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('check_in', models.DateTimeField(blank=True, null=True)),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('total_work_duration', models.DurationField(blank=True, null=True)),
                ('total_break_time', models.TimeField(null=True)),
                ('overtime_duration', models.DurationField(blank=True, null=True)),
                ('is_present', models.BooleanField(default=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='app.company')),
                ('leave', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.empleave')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=10, null=True, unique=True)),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=50, null=True)),
                ('email', models.CharField(max_length=50, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('mobile', models.CharField(max_length=11, null=True)),
                ('temporary_address', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_address', models.CharField(blank=True, max_length=255, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos')),
                ('aadhar_no', models.CharField(blank=True, max_length=100, null=True)),
                ('aadhar_card', models.ImageField(blank=True, null=True, upload_to='documents')),
                ('pan_no', models.CharField(blank=True, max_length=100, null=True)),
                ('pan_card', models.ImageField(blank=True, null=True, upload_to='documents')),
                ('guardian_name', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_mobile', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('previous_employer', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_releaving', models.DateField(blank=True, null=True)),
                ('previous_designation_name', models.CharField(blank=True, max_length=100, null=True)),
                ('previous_salary', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('ctc', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('gross_salary', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('epf_status', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=50, null=True)),
                ('uan', models.CharField(blank=True, max_length=50, null=True)),
                ('source_of_employment', models.CharField(blank=True, choices=[('internalreference', 'Internal Reference'), ('linkedin', 'LinkedIn'), ('walkin', 'Walk In'), ('socialmedia', 'Social Media')], max_length=50, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('bank', 'Bank')], max_length=50, null=True)),
                ('account_no', models.CharField(blank=True, max_length=20, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=50, null=True)),
                ('esic_status', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=50, null=True)),
                ('esic_no', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='app.company')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='app.department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='app.designation')),
                ('reporting_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reportees', to='app.employee')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('who_referred', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees_referred_by_me', to='app.employee')),
            ],
        ),
        migrations.AddField(
            model_name='empleave',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.employee'),
        ),
        migrations.AddField(
            model_name='empleave',
            name='reporting_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leave_approvals', to='app.employee'),
        ),
        migrations.CreateModel(
            name='BreakLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('attendance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='break_logs', to='app.attendance')),
                ('break_policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.breakconfig')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='breaks', to='app.employee')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='app.employee'),
        ),
        migrations.CreateModel(
            name='EmployeeAssetDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetinventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_employees', to='app.assetinventory')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_assignments', to='app.employee')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='asset_details',
            field=models.ManyToManyField(blank=True, through='app.EmployeeAssetDetails', to='app.assetinventory'),
        ),
        migrations.CreateModel(
            name='IncomeTaxConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('salary_from', models.DecimalField(decimal_places=2, max_digits=10)),
                ('salary_to', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_configs', to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='LearningCorner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='learning_corner/images')),
                ('document', models.FileField(blank=True, null=True, upload_to='learning_corner/documents')),
                ('video', models.FileField(blank=True, null=True, upload_to='learning_corner/videos')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_name', models.CharField(max_length=50, null=True)),
                ('count', models.PositiveIntegerField(default=0)),
                ('is_paid', models.BooleanField(default=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaves', to='app.company')),
            ],
        ),
        migrations.AddField(
            model_name='empleave',
            name='leave_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.leave'),
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company')),
            ],
            options={
                'verbose_name': 'Employee Level',
                'verbose_name_plural': 'Employee Levels',
                'ordering': ['level_name'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='app.level'),
        ),
        migrations.AddField(
            model_name='designation',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='designations', to='app.level'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateField(null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='PayrollBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Locked', 'Locked')], max_length=10)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_batches', to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='RelievedEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relieving_date', models.DateField()),
                ('remarks', models.TextField(blank=True, null=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='relieved_info', to='app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('basic_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('hra_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('conveyance_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('medical_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('special_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('service_charge_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_working_days', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_structures', to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('hra', models.DecimalField(decimal_places=2, max_digits=10)),
                ('conveyance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('medical', models.DecimalField(decimal_places=2, max_digits=10)),
                ('special_allowance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service_charges', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pf', models.DecimalField(decimal_places=2, max_digits=10)),
                ('income_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('net_pay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payroll_date', models.DateField(auto_now_add=True)),
                ('total_working_days', models.PositiveIntegerField(blank=True, null=True)),
                ('days_paid', models.PositiveIntegerField(blank=True, null=True)),
                ('loss_of_pay_days', models.PositiveIntegerField(blank=True, null=True)),
                ('other_allowances', models.JSONField(blank=True, null=True)),
                ('other_deductions', models.JSONField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payrolls', to='app.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.employee')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payrolls', to='app.payrollbatch')),
                ('salary_structure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.salarystructure')),
            ],
        ),
        migrations.CreateModel(
            name='DeductionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deductions', to='app.salarystructure')),
            ],
        ),
        migrations.CreateModel(
            name='AllowanceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allowances', to='app.salarystructure')),
            ],
        ),
        migrations.CreateModel(
            name='ShiftPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_type', models.CharField(max_length=20, null=True)),
                ('checkin', models.TimeField()),
                ('checkout', models.TimeField()),
                ('grace_period', models.DurationField(blank=True, null=True)),
                ('half_day', models.DurationField(blank=True, null=True)),
                ('full_day', models.DurationField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.company')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='shift',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.shiftpolicy'),
        ),
        migrations.CreateModel(
            name='DepartmentWiseWorkingDays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working_days_count', models.PositiveSmallIntegerField(help_text='Number of working days in a week (1-7)')),
                ('week_start_day', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('week_end_day', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.company')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.department')),
                ('shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.shiftpolicy')),
            ],
            options={
                'unique_together': {('department', 'shift')},
            },
        ),
    ]
